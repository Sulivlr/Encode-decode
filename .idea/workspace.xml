<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="9e2f892b-9f57-4494-b71b-a50784a0ea0c" name="Changes" comment="Added theme ts. forgot that.">
      <change beforePath="$PROJECT_DIR$/.idea/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/encode-decode.iml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/modules.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/vcs.xml" beforeDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="JavaScript File" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 6
}</component>
  <component name="ProjectId" id="2e2GPeQbaYZgJcQkdiSYpzvVSm6" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;last_opened_file_path&quot;: &quot;/Users/suli/encode-decode&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;ts.external.directory.path&quot;: &quot;/Users/suli/encode-decode/frontend/frontendd/node_modules/typescript/lib&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="9e2f892b-9f57-4494-b71b-a50784a0ea0c" name="Changes" comment="" />
      <created>1711095236280</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1711095236280</updated>
      <workItem from="1711095237284" duration="30000" />
      <workItem from="1711095289635" duration="13000" />
      <workItem from="1711095311786" duration="11000" />
      <workItem from="1711095331873" duration="52000" />
      <workItem from="1711095402775" duration="199000" />
      <workItem from="1711095623962" duration="6000" />
      <workItem from="1711095678327" duration="438000" />
      <workItem from="1711096155168" duration="63000" />
      <workItem from="1711096224108" duration="39000" />
      <workItem from="1711096287795" duration="149000" />
      <workItem from="1711096513635" duration="48000" />
      <workItem from="1711096584567" duration="28000" />
      <workItem from="1711096624818" duration="177000" />
      <workItem from="1711096814590" duration="18000" />
      <workItem from="1711096847286" duration="25000" />
      <workItem from="1711096887349" duration="26000" />
      <workItem from="1711096922064" duration="13000" />
      <workItem from="1711096959522" duration="8000" />
      <workItem from="1711096981898" duration="126000" />
      <workItem from="1711097116809" duration="19000" />
      <workItem from="1711097151530" duration="90000" />
      <workItem from="1711097251649" duration="145000" />
      <workItem from="1711097408605" duration="736000" />
    </task>
    <task id="LOCAL-00001" summary="Initial Commit. Created a backend api with port of 8000. we're doing post req like we did before in first HM , but before it was get req.">
      <option name="closed" value="true" />
      <created>1711096398185</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1711096398185</updated>
    </task>
    <task id="LOCAL-00002" summary="initial frontend commit.">
      <option name="closed" value="true" />
      <created>1711097075388</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1711097075388</updated>
    </task>
    <task id="LOCAL-00003" summary="Created a slice where we're doing a typization and also an initialstate. Now we created slice. In extrareducers we adding a cases where eather it would be fullfiled (success) or rejected (access denied) Its a basically handlers like If Else. In file Thunks we're working with Api of backend. as u can see i announce a Url of 8000. Its an basic thunks like we did in evry works before. In generel its an thunkfunctions that can work with backend api's.">
      <option name="closed" value="true" />
      <created>1711097086914</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1711097086914</updated>
    </task>
    <task id="LOCAL-00004" summary="In app we're just returning an html. Here we using mui ui tools. I like it much more than bootstrap to be honest , cuz in bootstrap i was always a bit confused while searching some inputs or buttons whatever, bit here while u typing, everything is understanble and readible. But i was confused why flex is called grid when its not grid but whatever. And . in Index js i changet import cors to const cuz import is working in ts. And also , why i used pure js in back instead of ts like Dmitri and Alexander showed, because in ts my vigenere wasnt working at first becuz of types, and i just decided to change it to js like in previous HW.">
      <option name="closed" value="true" />
      <created>1711097169401</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1711097169401</updated>
    </task>
    <task id="LOCAL-00005" summary="Forgot to change main. Here is Provider browserroute but its not usefull here, i just did it cuz, why not, Need to adapt. And i also add theme, cuz part of mui material, where we can change text field.">
      <option name="closed" value="true" />
      <created>1711097387714</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1711097387714</updated>
    </task>
    <task id="LOCAL-00006" summary="Added theme ts. forgot that.">
      <option name="closed" value="true" />
      <created>1711097451877</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1711097451877</updated>
    </task>
    <option name="localTasksCounter" value="7" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Initial Commit. Created a backend api with port of 8000. we're doing post req like we did before in first HM , but before it was get req." />
    <MESSAGE value="initial frontend commit." />
    <MESSAGE value="Created a slice where we're doing a typization and also an initialstate. Now we created slice. In extrareducers we adding a cases where eather it would be fullfiled (success) or rejected (access denied) Its a basically handlers like If Else. In file Thunks we're working with Api of backend. as u can see i announce a Url of 8000. Its an basic thunks like we did in evry works before. In generel its an thunkfunctions that can work with backend api's." />
    <MESSAGE value="In app we're just returning an html. Here we using mui ui tools. I like it much more than bootstrap to be honest , cuz in bootstrap i was always a bit confused while searching some inputs or buttons whatever, bit here while u typing, everything is understanble and readible. But i was confused why flex is called grid when its not grid but whatever. And . in Index js i changet import cors to const cuz import is working in ts. And also , why i used pure js in back instead of ts like Dmitri and Alexander showed, because in ts my vigenere wasnt working at first becuz of types, and i just decided to change it to js like in previous HW." />
    <MESSAGE value="Forgot to change main. Here is Provider browserroute but its not usefull here, i just did it cuz, why not, Need to adapt. And i also add theme, cuz part of mui material, where we can change text field." />
    <MESSAGE value="Added theme ts. forgot that." />
    <option name="LAST_COMMIT_MESSAGE" value="Added theme ts. forgot that." />
  </component>
</project>